{"version":3,"file":"personal-50124936.js","sources":["../../../../../src/pages/personal.vue"],"sourcesContent":["<script setup>\r\n  import { ref,onMounted } from 'vue';\r\n  import {useRouter} from 'vue-router'\r\n  import { useLoginStore } from '@/stores/login'\r\n  import { useLocalStorage } from '@vueuse/core';\r\n  \r\n  const store = useLoginStore()\r\n  const router = useRouter()\r\n  const argumentTitle = ref()\r\n  const argumentBody = ref()\r\n  const error = ref()\r\n  const error2 = ref()\r\n  const message = ref()\r\n  const personalArguments = ref([])\r\n  const isOpen = ref(false)\r\n  const isEditting = ref(false)\r\n  const editId = ref()\r\n\r\n  console.log('before verifyToken',store.token)\r\n  const {data} = await useFetch('/api/verifyToken',{\r\n    method:'POST',\r\n    body:{\r\n      token: store.token.token\r\n    }\r\n  })\r\n  console.log(data.verified)\r\n  if(!data.verified){\r\n    router.push('/authentication')\r\n  } else {\r\n    displayPersonalArguments()\r\n  }\r\n\r\n  async function displayPersonalArguments(){\r\n    const {data} = await useFetch('/api/displayPersonalArguments',{\r\n      method:'POST',\r\n      body:{\r\n        email:tokenVerification.data.result.email\r\n      }\r\n    })\r\n    error2.value = data.value.errorMessage\r\n    personalArguments.value = []\r\n    if(data.value.arguments){\r\n      data.value.arguments.forEach(argument => {\r\n      personalArguments.value.push(argument)\r\n    });\r\n    }\r\n  }\r\n\r\n  async function createArgument(){\r\n    const {data} = await useFetch('/api/createArgument',{\r\n      method:'POST',\r\n      body:{\r\n        email: tokenVerification.data.result.email,\r\n        title: argumentTitle.value,\r\n        argument: argumentBody.value\r\n      }\r\n    })\r\n    error.value = data.value.errorMessage\r\n    message.value = data.value.message\r\n    displayPersonalArguments()\r\n  }\r\n\r\n  function toggleArgumentsView(){\r\n    isOpen.value = !isOpen.value\r\n  }\r\n\r\n  async function destroyArgument(idNumber){\r\n    await useFetch('/api/destroyArgument',{\r\n      method:'POST',\r\n      body:{\r\n        id: idNumber\r\n      }\r\n    })\r\n    displayPersonalArguments()\r\n  }\r\n\r\n  function Edit(id,argument,title){\r\n    isEditting.value = true\r\n    editId.value = id\r\n    argumentBody.value = argument\r\n    argumentTitle.value = title\r\n    routerViewContainer.value.scrollTop = 0\r\n  }\r\n\r\n  async function confirmEdit(){\r\n    const {data} = await useFetch('/api/confirmEdit',{\r\n      method:'POST',\r\n      body:{\r\n        id: editId.value,\r\n        title: argumentTitle.value,\r\n        argument: argumentBody.value\r\n      }\r\n    })\r\n    error.value = data.value.errorMessage\r\n    message.value = data.value.message\r\n    displayPersonalArguments()\r\n  }\r\n</script>\r\n\r\n<template>\r\n  <div id=\"argument-inputs\">\r\n    <!--text field/title-->\r\n    <v-text-field \r\n      id=\"argument-title\" \r\n      v-model=\"argumentTitle\"\r\n      placeholder=\"Argument Title\"\r\n      class=\"argument-class\"\r\n    />\r\n  \r\n    <!--word counter-->\r\n    <div v-if=\"argumentTitle\">\r\n      {{ argumentTitle.length }}/100\r\n    </div>\r\n\r\n    <!--Text area-->\r\n    <v-textarea \r\n      id=\"argument-body\"\r\n      v-model=\"argumentBody\"\r\n      placeholder=\"Enter the argument you are making\"\r\n      class=\"argument-class\"\r\n      rows=\"20\"\r\n    />\r\n\r\n    <!--word counter-->\r\n    <div v-if=\"argumentBody\">\r\n      {{ argumentBody.length }}/5000\r\n    </div>\r\n\r\n    <!--button for adding argument-->\r\n    <v-btn\r\n      v-if=\"!isEditting\" \r\n      id=\"add-argument-button\"\r\n      class=\"argument-class\"\r\n      variant=\"tonal\"\r\n      @click=\"createArgument\"\r\n    >\r\n      Add Argument\r\n    </v-btn>\r\n\r\n    <!--buttons for editing-->\r\n    <div\r\n      v-if=\"isEditting\"\r\n      id=\"edit-buttons\"\r\n    >\r\n      <v-btn\r\n        variant=\"tonal\"\r\n        @click=\"() => confirmEdit()\"\r\n      >\r\n        Confirm Edit\r\n      </v-btn>\r\n      <v-btn\r\n        variant=\"tonal\"\r\n        @click=\"() => {\r\n          isEditting = false\r\n          argumentBody=null\r\n          argumentTitle=null\r\n        }\"\r\n      >\r\n        Cancel Edit\r\n      </v-btn>\r\n    </div>\r\n\r\n    <!--messages-->\r\n    <div v-if=\"error\">\r\n      {{ error }}\r\n    </div>\r\n    <div v-if=\"message\">\r\n      {{ message }}\r\n    </div>\r\n    <br>\r\n\r\n    <!--To toggle arguments view-->\r\n    <v-btn \r\n      variant=\"tonal\"\r\n      @click=\"toggleArgumentsView\"\r\n    >\r\n      View Argumments\r\n    </v-btn>\r\n\r\n    <div\r\n      v-if=\"isOpen\"\r\n      id=\"personal-arguments-container\"\r\n    >\r\n      <div v-if=\"error2\">\r\n        You have made no personal arguments yet\r\n      </div>\r\n      <v-card\r\n        v-for=\"argument in personalArguments\"\r\n        v-else\r\n        :key=\"argument.id\"\r\n        :title=\"argument.title\"\r\n        :text=\"argument.argument\"\r\n        variant=\"tonal\"\r\n      >\r\n        <v-card-actions>\r\n          <v-btn\r\n            @click=\"() => \r\n            {if(!isEditting){\r\n              destroyArgument(argument.id)\r\n            }}\"\r\n          >\r\n            Delete\r\n          </v-btn>\r\n          <v-btn \r\n            @click=\"Edit(argument.id,argument.argument,argument.title)\"\r\n          >\r\n            Edit\r\n          </v-btn>\r\n        </v-card-actions>\r\n      </v-card>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n\r\n  .v-card{\r\n    margin: 10px;\r\n    color:rgb(85, 42, 37);\r\n  }\r\n\r\n  div{\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-content: center;\r\n  }\r\n\r\n  .v-textarea{\r\n    width: 500px;\r\n    color: rgb(85, 42, 37);\r\n    text-align: left;\r\n  }\r\n  \r\n  .v-text-field{\r\n    width: 450px;\r\n    margin-bottom: 10px;\r\n    color: rgb(85, 42, 37);\r\n    text-align: center;\r\n  }\r\n\r\n  .v-btn{\r\n    width: 200px;\r\n    margin: 10px;\r\n  }\r\n\r\n  .v-card-actions{\r\n    display: flex;\r\n    flex-direction: row;\r\n    width: 80px;\r\n  }\r\n\r\n  #edit-buttons{\r\n    flex-direction: row;\r\n  }\r\n\r\n  #personal-arguments-container{\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n  }\r\n\r\n  #argument-inputs{\r\n    margin-top: calc(4dvh + 10px);\r\n  }\r\n  .argument-class, div{\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n  }\r\n</style>"],"names":["_withAsyncContext","data"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AACA,UAAA,QAAA,cAAA;AAMA,UAAA,SAAA,UAAA;AACA,UAAA,gBAAA,IAAA;AACA,UAAA,eAAA,IAAA;AACA,UAAA,QAAA,IAAA;AACA,UAAA,SAAA,IAAA;AACA,UAAA,UAAA,IAAA;AACA,UAAA,oBAAA,IAAA,EAAA;AACA,UAAA,SAAA,IAAA,KAAA;AACA,UAAA,aAAA,IAAA,KAAA;AACA,UAAA,SAAA,IAAA;AAEA,YAAA,IAAA,sBAAA,MAAA,KAAA;AACA,UAAA,EAAA,KAAA,KAAuB,CAAA,QAAA,SAAA,IAAAA,iBAAA,MAAA,SAAA,oBAAA;AAAA,MACvB,QAAA;AAAA,MACA,MAAA;AAAA,QACA,OAAA,MAAA,MAAA;AAAA,MACA;AAAA,IACA,GAAA,aAAA,CAAA;AACA,YAAA,IAAA,KAAA,QAAA;AACA,QAAA,CAAA,KAAA,UAAA;AACA,aAAA,KAAA,iBAAA;AAAA,IACA,OAAA;AACA,+BAAA;AAAA,IACA;AAEA,mBAAA,2BAAA;AACA,YAAA,EAAA,MAAAC,MAAA,IAAA,MAAA,SAAA,iCAAA;AAAA,QACA,QAAA;AAAA,QACA,MAAA;AAAA,UACA,OAAA,kBAAA,KAAA,OAAA;AAAA,QACA;AAAA,MACA,GAAA,aAAA;AACA,aAAA,QAAAA,MAAA,MAAA;AACA,wBAAA,QAAA,CAAA;AACA,UAAAA,MAAA,MAAA,WAAA;AACA,QAAAA,MAAA,MAAA,UAAA,QAAA,cAAA;AACA,4BAAA,MAAA,KAAA,QAAA;AAAA,QACA,CAAA;AAAA,MACA;AAAA,IACA;AAEA,mBAAA,iBAAA;AACA,YAAA,EAAA,MAAAA,MAAA,IAAA,MAAA,SAAA,uBAAA;AAAA,QACA,QAAA;AAAA,QACA,MAAA;AAAA,UACA,OAAA,kBAAA,KAAA,OAAA;AAAA,UACA,OAAA,cAAA;AAAA,UACA,UAAA,aAAA;AAAA,QACA;AAAA,MACA,GAAA,aAAA;AACA,YAAA,QAAAA,MAAA,MAAA;AACA,cAAA,QAAAA,MAAA,MAAA;AACA,+BAAA;AAAA,IACA;AAEA,aAAA,sBAAA;AACA,aAAA,QAAA,CAAA,OAAA;AAAA,IACA;AAEA,mBAAA,gBAAA,UAAA;AACA,YAAA,SAAA,wBAAA;AAAA,QACA,QAAA;AAAA,QACA,MAAA;AAAA,UACA,IAAA;AAAA,QACA;AAAA,MACA,GAAA,aAAA;AACA,+BAAA;AAAA,IACA;AAEA,aAAA,KAAA,IAAA,UAAA,OAAA;AACA,iBAAA,QAAA;AACA,aAAA,QAAA;AACA,mBAAA,QAAA;AACA,oBAAA,QAAA;AACA,0BAAA,MAAA,YAAA;AAAA,IACA;AAEA,mBAAA,cAAA;AACA,YAAA,EAAA,MAAAA,MAAA,IAAA,MAAA,SAAA,oBAAA;AAAA,QACA,QAAA;AAAA,QACA,MAAA;AAAA,UACA,IAAA,OAAA;AAAA,UACA,OAAA,cAAA;AAAA,UACA,UAAA,aAAA;AAAA,QACA;AAAA,MACA,GAAA,aAAA;AACA,YAAA,QAAAA,MAAA,MAAA;AACA,cAAA,QAAAA,MAAA,MAAA;AACA,+BAAA;AAAA,IACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}